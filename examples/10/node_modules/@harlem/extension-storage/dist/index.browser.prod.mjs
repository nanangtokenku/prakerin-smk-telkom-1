var m="extension:storage",i={sync:"extension:storage:sync"};import{EVENTS as c}from"@harlem/core";import{functionIdentity as R,matchGetFilter as j,objectFromPath as B,objectSet as A,objectTrace as J,typeIsNil as L}from"@harlem/utilities";function M(s){return{type:"local",prefix:"harlem",sync:!0,restore:!1,include:"*",exclude:[],serialiser:r=>JSON.stringify(r),parser:r=>JSON.parse(r),branch:R,...s}}function U(s){let r=M(s),{type:T,prefix:S,sync:x,restore:E,include:v,exclude:N,serialiser:I,parser:O,branch:h}=r;return e=>{if(e.flags.has("ssr:server")){let t=()=>{};return{startStorageSync:t,stopStorageSync:t,clearStorage:t,restoreStorage:t}}e.register("extensions","storage",()=>r);let{value:w,getNodes:g,resetNodes:b}=J(),n=T==="session"?sessionStorage:localStorage,a=S?`${S}:${e.name}`:e.name,P=j({include:v,exclude:N});b(),h(w);function D(){e.on(c.mutation.success,t=>{if(!(!t||t.data.name===i.sync||!P(t.data.name)))try{let o=B(e.state,g());n.setItem(a,I(o))}catch(o){console.warn("Failed to write to storage")}})}function l(t){e.write(i.sync,m,o=>A(o,g(),O(t)))}function f({key:t,storageArea:o,newValue:y}){o===n&&t===a&&y&&l(y)}function p(){window.addEventListener("storage",f)}function u(){window.removeEventListener("storage",f)}function F(){n.removeItem(a)}function d(){let t=n.getItem(a);L(t)||l(t)}return e.once(c.store.created,()=>{D(),x&&p(),E&&d()}),e.once(c.store.destroyed,()=>u()),{startStorageSync:p,stopStorageSync:u,clearStorage:F,restoreStorage:d}}}export{U as default};
