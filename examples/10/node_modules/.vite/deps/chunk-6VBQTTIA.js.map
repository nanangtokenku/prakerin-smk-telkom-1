{
  "version": 3,
  "sources": ["../../@harlem/utilities/dist/index.bundler.mjs"],
  "sourcesContent": ["// src/function/identity.ts\nfunction identity(value) {\n  return value;\n}\n\n// src/type/get-type.ts\nfunction getType(input) {\n  return Object.prototype.toString.call(input).slice(8, -1).toLowerCase();\n}\n\n// src/type/is-function.ts\nfunction isFunction(value) {\n  return getType(value) === \"function\";\n}\n\n// src/type/is-string.ts\nfunction isString(value) {\n  return getType(value) === \"string\";\n}\n\n// src/match/normalise.ts\nfunction normalise(matcher) {\n  if (matcher === \"*\") {\n    return () => true;\n  }\n  if (isFunction(matcher)) {\n    return matcher;\n  }\n  const patterns = [].concat(matcher).map(\n    (pattern) => isString(pattern) ? new RegExp(pattern) : pattern\n  );\n  return (value) => patterns.some((pattern) => pattern.test(value));\n}\n\n// src/match/get-filter.ts\nfunction getFilter({\n  include = \"*\",\n  exclude = []\n}) {\n  const includeMatcher = normalise(include);\n  const excludeMatcher = normalise(exclude);\n  return (value) => includeMatcher(value) && !excludeMatcher(value);\n}\n\n// src/object/clone.ts\nimport {\n  unref\n} from \"vue\";\nfunction cloneIdentity(input) {\n  return input;\n}\nfunction cloneBasic(input) {\n  return new input.constructor(input);\n}\nfunction cloneRegex(input) {\n  const clonedRegex = new RegExp(input.source);\n  clonedRegex.lastIndex = input.lastIndex;\n  return clonedRegex;\n}\nfunction cloneSymbol(input) {\n  return Object(Symbol.prototype.valueOf.call(input));\n}\nfunction cloneObject(input) {\n  const output = {};\n  for (const key in input) {\n    output[key] = clone(input[key]);\n  }\n  return output;\n}\nfunction cloneArray(input) {\n  return input.map(clone);\n}\nfunction cloneSet(input) {\n  const output = /* @__PURE__ */ new Set();\n  input.forEach((value) => {\n    output.add(clone(value));\n  });\n  return output;\n}\nfunction cloneMap(input) {\n  const output = /* @__PURE__ */ new Map();\n  input.forEach((value, key) => {\n    output.set(key, clone(value));\n  });\n  return output;\n}\nvar CLONE_MAP = {\n  default: cloneIdentity,\n  null: cloneIdentity,\n  undefined: cloneIdentity,\n  boolean: cloneBasic,\n  number: cloneBasic,\n  string: cloneBasic,\n  error: cloneBasic,\n  date: cloneBasic,\n  regexp: cloneRegex,\n  function: cloneIdentity,\n  symbol: cloneSymbol,\n  array: cloneArray,\n  object: cloneObject,\n  map: cloneMap,\n  set: cloneSet\n};\nfunction clone(value) {\n  const input = unref(value);\n  if (typeof input !== \"object\" || input === null) {\n    return input;\n  }\n  const type = getType(input);\n  const cloner = CLONE_MAP[type] || CLONE_MAP.default;\n  return cloner(input);\n}\n\n// src/type/is-array.ts\nfunction isArray(value) {\n  return getType(value) === \"array\";\n}\n\n// src/object/from-path.ts\nfunction fromPath(value, path) {\n  const nodes = isArray(path) ? path : path.split(\"/\");\n  return nodes.reduce((branch, node) => branch[node], value);\n}\n\n// src/object/lock.ts\nfunction lock(input, exclusions) {\n  return new Proxy(input, {\n    get(target, prop) {\n      if (exclusions.includes(prop)) {\n        throw new Error(`Access to property '${prop}' is denied`);\n      }\n      const value = target[prop];\n      if (typeof value === \"function\") {\n        return (...args) => Reflect.apply(value, target, args);\n      }\n      return value;\n    }\n  });\n}\n\n// src/object/omit.ts\nfunction omit(value, matcher) {\n  const output = {};\n  const filter = normalise(matcher);\n  for (const key in value) {\n    if (!filter(key)) {\n      output[key] = value[key];\n    }\n  }\n  return output;\n}\n\n// src/object/overwrite.ts\nfunction overwrite(target, source) {\n  if (typeof target !== \"object\" || typeof source !== \"object\") {\n    return target;\n  }\n  for (const prop in target) {\n    if (!(prop in source)) {\n      delete target[prop];\n    }\n  }\n  return Object.assign(target, source);\n}\n\n// src/type/is-nil.ts\nfunction isNil(value) {\n  return value == null;\n}\n\n// src/object/set.ts\nfunction setObjectValue(target, path, value) {\n  const nodes = (isArray(path) ? path : path.split(\"/\")).slice();\n  const key = nodes.pop();\n  if (isNil(key) || key === \"\") {\n    return overwrite(target, value);\n  }\n  const parent = fromPath(target, nodes);\n  parent[key] = value;\n}\n\n// src/object/to-path.ts\nfunction toPath(nodes) {\n  return nodes.reduceRight((path, node) => {\n    const nodeStr = node.toString();\n    const segment = isNaN(parseInt(nodeStr, 10)) ? `/${node.toString()}` : `[${node.toString()}]`;\n    return segment + path.toString();\n  }, \"\").toString();\n}\n\n// src/object/trace.ts\nfunction traceObjectPath(onAccess) {\n  return new Proxy({}, {\n    get(target, key) {\n      onAccess(key);\n      return traceObjectPath(onAccess);\n    }\n  });\n}\nfunction traceObject() {\n  const nodes = /* @__PURE__ */ new Set();\n  const value = traceObjectPath((key) => nodes.add(key));\n  const getNodes = () => Array.from(nodes);\n  const resetNodes = () => nodes.clear();\n  return {\n    value,\n    getNodes,\n    resetNodes\n  };\n}\n\n// src/type/is-object.ts\nfunction isObject(value) {\n  return getType(value) === \"object\";\n}\n\n// src/type/is-matchable.ts\nfunction isMatchable(value) {\n  return isObject(value) && \"include\" in value && \"exclude\" in value;\n}\nexport {\n  identity as functionIdentity,\n  getFilter as matchGetFilter,\n  normalise as matchNormalise,\n  clone as objectClone,\n  fromPath as objectFromPath,\n  lock as objectLock,\n  omit as objectOmit,\n  overwrite as objectOverwrite,\n  setObjectValue as objectSet,\n  toPath as objectToPath,\n  traceObject as objectTrace,\n  getType as typeGetType,\n  isArray as typeIsArray,\n  isFunction as typeIsFunction,\n  isMatchable as typeIsMatchable,\n  isNil as typeIsNil,\n  isObject as typeIsObject,\n  isString as typeIsString\n};\n"],
  "mappings": "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",
  "names": []
}
